server:
  port: 8070
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/oms_order_db
    username: oms_pg_user
    password: 123456
  jpa:
    hibernate:
      ddl-auto: create
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        compression.type: snappy
    consumer:
      group-id: order-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.oms.order.kafka.events"
        spring.json.type.mapping: "orderCreated:com.oms.order.kafka.events.OrderCreatedEvent,paymentProcessed:com.oms.order.kafka.events.PaymentProcessedEvent"

  application:
    config:
      user-url: http://localhost/api/v1/user
      product-url: http://localhost/api/v1/product
      tenant-url: http://localhost/api/v1/tenant
      inventory-url: http://localhost/api/v1/inventory